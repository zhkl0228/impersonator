/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_wolfssl_WolfSSLCertRequest */

#ifndef _Included_com_wolfssl_WolfSSLCertRequest
#define _Included_com_wolfssl_WolfSSLCertRequest
#ifdef __cplusplus
extern "C" {
#endif
#undef com_wolfssl_WolfSSLCertRequest_EVP_PKEY_RSA
#define com_wolfssl_WolfSSLCertRequest_EVP_PKEY_RSA 16L
#undef com_wolfssl_WolfSSLCertRequest_EVP_PKEY_EC
#define com_wolfssl_WolfSSLCertRequest_EVP_PKEY_EC 18L
#undef com_wolfssl_WolfSSLCertRequest_MBSTRING_ASC
#define com_wolfssl_WolfSSLCertRequest_MBSTRING_ASC 4097L
/*
 * Class:     com_wolfssl_WolfSSLCertRequest
 * Method:    X509_REQ_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_wolfssl_WolfSSLCertRequest_X509_1REQ_1new
  (JNIEnv *, jclass);

/*
 * Class:     com_wolfssl_WolfSSLCertRequest
 * Method:    X509_REQ_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_wolfssl_WolfSSLCertRequest_X509_1REQ_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_wolfssl_WolfSSLCertRequest
 * Method:    X509_REQ_set_subject_name
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_WolfSSLCertRequest_X509_1REQ_1set_1subject_1name
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_wolfssl_WolfSSLCertRequest
 * Method:    X509_REQ_add1_attr_by_NID
 * Signature: (JII[B)I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_WolfSSLCertRequest_X509_1REQ_1add1_1attr_1by_1NID
  (JNIEnv *, jclass, jlong, jint, jint, jbyteArray);

/*
 * Class:     com_wolfssl_WolfSSLCertRequest
 * Method:    X509_REQ_set_version
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_WolfSSLCertRequest_X509_1REQ_1set_1version
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_wolfssl_WolfSSLCertRequest
 * Method:    X509_REQ_print
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_wolfssl_WolfSSLCertRequest_X509_1REQ_1print
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_wolfssl_WolfSSLCertRequest
 * Method:    X509_REQ_sign
 * Signature: (JI[BILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_WolfSSLCertRequest_X509_1REQ_1sign
  (JNIEnv *, jclass, jlong, jint, jbyteArray, jint, jstring);

/*
 * Class:     com_wolfssl_WolfSSLCertRequest
 * Method:    X509_REQ_set_pubkey_native_open
 * Signature: (JI[BI)I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_WolfSSLCertRequest_X509_1REQ_1set_1pubkey_1native_1open
  (JNIEnv *, jclass, jlong, jint, jbyteArray, jint);

/*
 * Class:     com_wolfssl_WolfSSLCertRequest
 * Method:    X509_REQ_get_der
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_wolfssl_WolfSSLCertRequest_X509_1REQ_1get_1der
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_wolfssl_WolfSSLCertRequest
 * Method:    X509_REQ_get_pem
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_wolfssl_WolfSSLCertRequest_X509_1REQ_1get_1pem
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_wolfssl_WolfSSLCertRequest
 * Method:    X509_add_ext_via_nconf_nid
 * Signature: (JILjava/lang/String;Z)I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_WolfSSLCertRequest_X509_1add_1ext_1via_1nconf_1nid
  (JNIEnv *, jclass, jlong, jint, jstring, jboolean);

/*
 * Class:     com_wolfssl_WolfSSLCertRequest
 * Method:    X509_add_ext_via_set_object_boolean
 * Signature: (JIZZ)I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_WolfSSLCertRequest_X509_1add_1ext_1via_1set_1object_1boolean
  (JNIEnv *, jclass, jlong, jint, jboolean, jboolean);

#ifdef __cplusplus
}
#endif
#endif
